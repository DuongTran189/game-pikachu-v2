{"version":3,"sources":["routes/CONSTANTS.ts","types/game.ts","recoil/atoms/gameSoundState.ts","hooks/useLocalStorage.ts","services/i18n.ts","components/SwitchLanguage.tsx","pages/MainPage.tsx","components/RankBoard.tsx","recoil/atoms/gameState.ts","utils/game.ts","recoil/atoms/gameOverlayState.ts","recoil/atoms/selectedPokemonsState.ts","recoil/selectors/selectedPokemonsSelector.ts","hooks/useGameSpeedActions.ts","pages/SinglePlayerPage.tsx","pages/MultiPlayerPage.tsx","components/Game/PokemonCard.tsx","components/Game/PokemonRow.tsx","recoil/atoms/gameTimingState.ts","hooks/useGameEngine.ts","components/GameBoard.tsx","components/Game/LineCard.tsx","components/Game/LineRow.tsx","components/GameOverlay.tsx","hooks/useGameOverlayEngine.ts","utils/time.ts","components/Game/GameSpeedInfo.tsx","pages/SpeedModePage.tsx","components/Game/GameSurvivalInfo.tsx","pages/SurvivalModePage.tsx","App.tsx","hooks/usePlaySound.ts","reportWebVitals.ts","assets/sound/menu-open.mp3","assets/sound/disable-sound.mp3","assets/sound/enable-sound.mp3","assets/sound/switch-on.mp3","assets/sound/switch-off.mp3","assets/sound/bite.mp3","assets/sound/fanfare.mp3","assets/sound/glug-a.mp3","assets/sound/rising-pops.mp3","assets/sound/game-completion.wav","assets/sound/gamers-fail-game.mp3","assets/sound/time-limited.wav","assets/sound/levelup.mp3","assets/sound/pop-down.mp3","assets/sound/pop-up-on.mp3","assets/sound/pop-up-off.mp3","assets/sound/you-win.mp3","components/SoundProvider.tsx","index.tsx"],"names":["Routes","GameSelector","GameMode","GameTypeState","GameStatus","Direction","PointType","GameLevel","gameOptions","LEVEL_1","row","col","LEVEL_2","LEVEL_3","LEVEL_4","LEVEL_5","LEVEL_6","LEVEL_7","LEVEL_8","LEVEL_9","LEVEL_10","LEVEL_11","LEVEL_12","LEVEL_13","LEVEL_14","nextLevel","gameSoundState","atom","key","GAME_SOUND_STATE","default","soundReady","playOpenMenuSound","playEnableSound","playDisableSound","playCompletedGameSound","playFailedGameSound","playBiteSound","playRisingPopSound","playFanfareSound","playGlugSound","playNearlyEndTimeSound","playOffSound","playOnSound","playLevelUpSound","playPopDownSound","playPopUpOnSound","playPopUpOffSound","playYouWinSound","useLocalStorage","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","i18n","use","initReactI18next","init","resources","en","translation","English","Vietnamese","Back","Replay","Language","Level","vi","lng","fallbackLng","interpolation","escapeValue","SwitchLanguage","t","useTranslation","useRecoilValue","setStorageValue","changeLanguage","className","onClick","MainPage","Helmet","charSet","to","SINGLE_PLAYER_PAGE","MULTI_PLAYER_PAGE","RankBoard","gameState","GAME_STATE","status","PENDING","pokemons","matrix","level","BASE_URL","pokemonList","id","matched","image","shufflePokemonList","nonShuffleList","shuffledPokemonList","sort","Math","random","shuffledlistPokemon","map","pokemon","nid","nanoid","reShufflePokemonList","arrayPokemons","objectList","arrayList","Object","keys","push","convertObjectToArrayList","generatePokemonMatrix","rowSetting","colSetting","newPokemons","totalCol","totalRow","pokemonKeys","pokemonMatrix","undefined","borderPoint","pokemonKey","pop","rowIndex","colIndex","hasConnectLine","point1","point2","pathPoints","fromPoint","toPoint","matrixTotalRow","matrixTotalCol","tempMatrix","newMatrix","length","i","slice","cloneMatrix","matrixPoints","matrixTrackingPoints","dRow","dCol","queue","currentPoint","shift","index","trackedPoints","trackPoint","findPath","connected","checkPointInLine","connectingLinePoints","currentPosition","find","matchingLinePoint","checkConnectionSelectedPokemons","selectedPokemons","newSelectedPokemons","selectedPokemon1","selectedPokemon2","limitRow","limitCol","reduce","newPathPoints","arrayPoints","type","LINE","direction","prevIndex","END","prevPoint","TOP","BOTTOM","LEFT","RIGHT","extraPoint","START","newCurrentPoint","drawPath","gameOverlayState","GAME_OVERLAY_STATE","selectedPokemonsState","SELECTED_POKEMONS","selectedPokemonsSelector","selector","SELECTED_POKEMONS_SELECTOR","get","set","newValue","cloneSelectedPokemons","useGameSpeedActions","setSelectedPokemons","useSetRecoilState","resetGameState","useResetRecoilState","resetGameOverlayState","resetSelectedPokemonsState","selectPokemon","pokemonId","resetGame","SinglePlayerPage","useEffect","SURVIVAL_MODE_PAGE","SPEED_MODE_PAGE","MAIN_PAGE","MultiPlayerPage","PokemonCard","isSelected","selected","hidden","style","backgroundImage","propsAreEquals","prevProps","nextProps","memo","PokemonRow","findIndex","gameTimingState","GAME_TIMING_STATE","timing","yourTiming","useGameEngine","mode","location","useLocation","setGame","setGameTiming","initGame","useCallback","total","slicePokemonList","nonShufflePokemonList","makeListPokemons","RUNNING","SURVIVAL_MODE","SPEED_MODE","entries","checkCompletedLevel","levelUp","COMPLETED","foundConnectLine","entriesPokemons","entryPokemon","currentPokemon","some","hasAnyConnectLine","newShufflePokemons","shuffleMatrix","replayGame","endGame","GameBoard","LineCard","point","pointClass","lineRef","useRef","setTimeout","current","classList","remove","ref","LineRow","cards","_","GameOverlay","gameTiming","useGameOverlayEngine","columnCards","Array","fill","timeConvert","num","minutes","floor","toString","padStart","GameSpeedInfo","useRecoilState","timeoutId","clearTimeout","SpeedModePage","GameSurvivalInfo","SurvivalModePage","App","Sound","storageValue","path","exact","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","usePlaySound","sound","soundPath","menuOpenSound","BITE","biteSound","COMPLETE_GAME","completeGameSound","DISABLE","disableSound","ENABLE","enableSound","ON","onSound","OFF","offSound","FAIL_GAME","failedGameSound","GLUG","glugSound","FANFARE","fanfareSound","RISING_POP","risingPopSound","NEARLY_END_TIME","nearlyEndTimeSound","LEVEL_UP","levelUpSound","POP_DOWN","popDownSound","POP_UP_ON","popUpOnSound","POP_UP_OFF","popUpOffSound","YOU_WIN","youWinSound","useSound","interrupt","play","playSound","loadedSound","stopSound","stop","pauseSound","pause","duration","SoundProvider","children","loadedOpenMenuSound","loadedCompletedGameSound","loadedFailedGameSound","loadedBiteSound","loadedDisableSound","loadedEnableSound","loadedOnSound","loadedOffSound","loadedFanfareSound","loadedGlugSound","loadedNearlyEndTimeSound","loadedRisingPopSound","loadedPopDownSound","loadedPopUpOnSound","loadedPopUpOffSound","loadedLevelUpSound","loadedYouWinSound","setSounds","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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EAAE,qBAGP,cAAC,IAAD,CAAMU,GAAIjG,EAAOmG,kBAAjB,SACE,wBAAQN,QAAS,kBAAM/C,KAAvB,SACGyC,EAAE,oBAGP,cAAC,EAAD,WC0GOa,EAtIG,WAChB,IAAQb,EAAMC,cAAND,EAER,OACE,sBAAKK,UAAU,kCAAf,UACE,6BAAKL,EAAE,iBACP,sBAAKK,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,6BACE,6BAAKL,EAAE,2BAET,qBAAIK,UAAU,YAAd,UACE,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,8CAGJ,sBAAKA,UAAU,MAAf,UACE,6BACE,6BAAKL,EAAE,2BAET,qBAAIK,UAAU,YAAd,UACE,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,qDC5GGS,EAZG1E,YAAgB,CAChCC,IAAKzB,EAAcmG,WACnBxE,QAAS,CACPyE,OAAQnG,EAAWoG,QACnB9F,IAAK,EACLC,IAAK,EACL8F,SAAU,GACVC,OAAQ,GACRC,MAAOpG,EAAUE,W,uBCPfmG,EACJ,6GAESC,EAAyB,CAClC,CAAEC,GAAI,SAAUC,SAAS,EAAOC,M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","file":"static/js/main.e6b47419.chunk.js","sourcesContent":["export enum Routes {\n  MAIN_PAGE = \"/\",\n  SINGLE_PLAYER_PAGE = \"/single-player\",\n  MULTI_PLAYER_PAGE = \"/multi-player\",\n  SURVIVAL_MODE_PAGE = \"/survival-mode\",\n  SPEED_MODE_PAGE = \"/speed-mode\",\n}\n","export enum GameSelector {\n  SELECTED_POKEMONS_SELECTOR = \"SELECTED_POKEMONS_SELECTOR\",\n}\n\nexport interface Pokemon {\n  id: string;\n  matched: boolean;\n  nid?: string;\n  image?: string;\n  rowIndex?: number;\n  colIndex?: number;\n}\n\nexport enum GameMode {\n  SURVIVAL_MODE = \"SURVIVAL_MODE\",\n  SPEED_MODE = \"SPEED_MODE\",\n}\n\nexport interface GameSound {\n  soundReady: boolean;\n  playOpenMenuSound: Function;\n  playDisableSound: Function;\n  playEnableSound: Function;\n  playCompletedGameSound: Function;\n  playFailedGameSound: Function;\n  playBiteSound: Function;\n  playOnSound: Function;\n  playOffSound: Function;\n  playGlugSound: Function;\n  playFanfareSound: Function;\n  playRisingPopSound: Function;\n  playNearlyEndTimeSound: Function;\n  playLevelUpSound: Function;\n  playPopUpOnSound: Function;\n  playPopUpOffSound: Function;\n  playPopDownSound: Function;\n  playYouWinSound: Function;\n}\n\nexport enum GameTypeState {\n  GAME_STATE = \"GAME_STATE\",\n  GAME_SOUND_STATE = \"GAME_SOUND_STATE\",\n  GAME_TIMING_STATE = \"GAME_TIMING_STATE\",\n  GAME_OVERLAY_STATE = \"GAME_OVERLAY_STATE\",\n  SELECTED_POKEMONS = \"SELECTED_POKEMONS\",\n}\n\nexport enum GameStatus {\n  RUNNING = \"running\",\n  PENDING = \"pending\",\n  COMPLETED = \"completed\",\n  FAILED = \"failed\",\n}\n\nexport interface GameState {\n  status: GameStatus;\n  row: number;\n  col: number;\n  pokemons: Record<string, Pokemon>;\n  matrix: Pokemon[][];\n  level: GameLevel;\n}\n\nexport interface GameOverlayState {\n  connectingLinePoints: PointCoords[];\n}\n\nexport enum Direction {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n}\n\nexport enum PointType {\n  START = \"start\",\n  END = \"end\",\n  LINE = \"line\",\n}\n\nexport interface PointCoords {\n  rowIndex: number;\n  colIndex: number;\n  direction?: Direction;\n  type?: PointType;\n}\n\nexport interface PokemonCoords extends PointCoords {\n  nid?: string;\n}\n\nexport enum GameLevel {\n  LEVEL_1 = \"1\",\n  LEVEL_2 = \"2\",\n  LEVEL_3 = \"3\",\n  LEVEL_4 = \"4\",\n  LEVEL_5 = \"5\",\n  LEVEL_6 = \"6\",\n  LEVEL_7 = \"7\",\n  LEVEL_8 = \"8\",\n  LEVEL_9 = \"9\",\n  LEVEL_10 = \"10\",\n  LEVEL_11 = \"11\",\n  LEVEL_12 = \"12\",\n  LEVEL_13 = \"13\",\n  LEVEL_14 = \"MAX\",\n}\n\nexport type GameOptions = {\n  [key in GameLevel]: {\n    row: number;\n    col: number;\n  };\n};\n\nexport const gameOptions: GameOptions = {\n  [GameLevel.LEVEL_1]: {\n    row: 3,\n    col: 4,\n  },\n  [GameLevel.LEVEL_2]: {\n    row: 4,\n    col: 4,\n  },\n  [GameLevel.LEVEL_3]: {\n    row: 4,\n    col: 5,\n  },\n  [GameLevel.LEVEL_4]: {\n    row: 4,\n    col: 6,\n  },\n  [GameLevel.LEVEL_5]: {\n    row: 4,\n    col: 7,\n  },\n  [GameLevel.LEVEL_6]: {\n    row: 6,\n    col: 8,\n  },\n  [GameLevel.LEVEL_7]: {\n    row: 7,\n    col: 8,\n  },\n  [GameLevel.LEVEL_8]: {\n    row: 8,\n    col: 8,\n  },\n  [GameLevel.LEVEL_9]: {\n    row: 8,\n    col: 9,\n  },\n  [GameLevel.LEVEL_10]: {\n    row: 8,\n    col: 10,\n  },\n  [GameLevel.LEVEL_11]: {\n    row: 8,\n    col: 11,\n  },\n  [GameLevel.LEVEL_12]: {\n    row: 8,\n    col: 12,\n  },\n  [GameLevel.LEVEL_13]: {\n    row: 9,\n    col: 12,\n  },\n  [GameLevel.LEVEL_14]: {\n    row: 10,\n    col: 12,\n  },\n};\n\nexport const nextLevel = {\n  [GameLevel.LEVEL_1]: GameLevel.LEVEL_2,\n  [GameLevel.LEVEL_2]: GameLevel.LEVEL_3,\n  [GameLevel.LEVEL_3]: GameLevel.LEVEL_4,\n  [GameLevel.LEVEL_4]: GameLevel.LEVEL_5,\n  [GameLevel.LEVEL_5]: GameLevel.LEVEL_6,\n  [GameLevel.LEVEL_6]: GameLevel.LEVEL_7,\n  [GameLevel.LEVEL_7]: GameLevel.LEVEL_8,\n  [GameLevel.LEVEL_8]: GameLevel.LEVEL_9,\n  [GameLevel.LEVEL_9]: GameLevel.LEVEL_10,\n  [GameLevel.LEVEL_10]: GameLevel.LEVEL_11,\n  [GameLevel.LEVEL_11]: GameLevel.LEVEL_12,\n  [GameLevel.LEVEL_12]: GameLevel.LEVEL_13,\n  [GameLevel.LEVEL_13]: GameLevel.LEVEL_14,\n  [GameLevel.LEVEL_14]: GameLevel.LEVEL_14,\n};\n","import { atom } from \"recoil\";\nimport { GameSound, GameTypeState } from \"../../types/game\";\n\nconst gameSoundState = atom<GameSound>({\n  key: GameTypeState.GAME_SOUND_STATE,\n  default: {\n    soundReady: false,\n    playOpenMenuSound: () => {},\n    playEnableSound: () => {},\n    playDisableSound: () => {},\n    playCompletedGameSound: () => {},\n    playFailedGameSound: () => {},\n    playBiteSound: () => {},\n    playRisingPopSound: () => {},\n    playFanfareSound: () => {},\n    playGlugSound: () => {},\n    playNearlyEndTimeSound: () => {},\n    playOffSound: () => {},\n    playOnSound: () => {},\n    playLevelUpSound: () => {},\n    playPopDownSound: () => {},\n    playPopUpOnSound: () => {},\n    playPopUpOffSound: () => {},\n    playYouWinSound: () => {},\n  },\n});\n\nexport default gameSoundState;\n","import { useState } from \"react\";\r\n\r\n// Hook\r\nexport default function useLocalStorage(key: string, initialValue: string) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value: any) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n    resources: {\n      en: {\n        translation: {\n          English: \"English\",\n          Vietnamese: \"Vietnamese\",\n          Back: \"Back\",\n          Replay: \"Replay\",\n          Language: \"Language\",\n          Level: \"Level\",\n          \"Congratulations!\": \"Congratulations!\",\n          \"The fastest is best\": \"The fastest is best\",\n          \"The longest is best\": \"The longest is best\",\n          \"Your score\": \"Your score\",\n          \"Your time\": \"Your time\",\n          \"Remaining time\": \"Remaining time\",\n          \"Top players\": \"Top players\",\n          \"Single player\": \"Single player\",\n          \"Multi player\": \"Multi player\",\n          \"Main menu\": \"Main menu\",\n          \"Speed mode\": \"Speed mode\",\n          \"Survival mode\": \"Survival mode\",\n          \"Coming soon...\": \"Coming soon...\",\n          \"Scroll down to play\": \"Scroll down to play\",\n          \"Preparing resource...\": \"Preparing resource...\",\n          \"Please complete all levels as fast as you can\":\n            \"Please complete all levels as fast as you can\",\n          \"Try your best not to run out of time as long as possible.\":\n            \"Try your best not to run out of time as long as possible\",\n          \"Your time will increase when you match a pair of pokemon\":\n            \"Your time will increase when you match a pair of pokemon\",\n          \"Choosing the wrong pair will increase the time\":\n            \"Choosing the wrong pair will increase the time\",\n          \"Choosing the wrong pair will decrease the time\":\n            \"Choosing the wrong pair will decrease the time\",\n        },\n      },\n      vi: {\n        translation: {\n          English: \"Tiếng Anh\",\n          Vietnamese: \"Tiếng Việt\",\n          Back: \"Trở lại\",\n          Replay: \"Chơi lại\",\n          Language: \"Ngôn ngữ\",\n          Level: \"Cấp độ\",\n          \"Congratulations!\": \"Xin chúc mừng!\",\n          \"The fastest is best\": \"Hoàn thành càng sớm, thứ hạng càng cao\",\n          \"The longest is best\":\n            \"Kéo dài thời gian càng lâu, thứ hạng càng cao\",\n          \"Your score\": \"Điểm số của bạn\",\n          \"Your time\": \"Thời gian của bạn\",\n          \"Remaining time\": \"Thời gian còn lại\",\n          \"Top players\": \"Danh sách người chơi hàng đầu\",\n          \"Single player\": \"Cá nhân\",\n          \"Multi player\": \"Đối kháng\",\n          \"Main menu\": \"Màn hình chính\",\n          \"Speed mode\": \"Tốc độ\",\n          \"Survival mode\": \"Sinh tồn\",\n          \"Coming soon...\": \"Đang phát triển...\",\n          \"Preparing resource...\": \"Đang chuẩn bị...\",\n          \"Scroll down to play\": \"Lăn chuột xuống để chơi\",\n          \"Please complete all levels as fast as you can\":\n            \"Hãy hoàn thành tất cả cấp độ nhanh nhất có thể \",\n          \"Try your best not to run out of time as long as possible\":\n            \"Cố gắng hết sức để không hết thời gian lâu nhất có thể\",\n          \"Your time will increase when you match a pair of pokemon\":\n            \"Thời gian của bạn sẽ tăng thêm khi chọn khớp một cặp pokemon\",\n          \"Choosing the wrong pair will increase the time\":\n            \"Chọn sai cặp sẽ bị tăng thêm thời gian\",\n          \"Choosing the wrong pair will decrease the time\":\n            \"Chọn sai cặp sẽ bị giảm thời gian\",\n        },\n      },\n    },\n    lng: \"en\", // if you're using a language detector, do not define the lng option\n    fallbackLng: \"en\",\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import { useTranslation } from \"react-i18next\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport i18n from \"../services/i18n\";\r\n\r\nconst SwitchLanguage = () => {\r\n  const { t } = useTranslation();\r\n  const { playOffSound } = useRecoilValue(gameSoundState);\r\n  const [_, setStorageValue] = useLocalStorage(\"language\", \"vi\");\r\n  const changeLanguage = (lng: \"en\" | \"vi\") => {\r\n    i18n.changeLanguage(lng);\r\n    setStorageValue(lng);\r\n    playOffSound();\r\n  };\r\n\r\n  return (\r\n    <h5 className=\"select-language\">\r\n      {t(\"Language\")}:{\" \"}\r\n      <strong onClick={() => changeLanguage(\"en\")}>{t(\"English\")}</strong> -{\" \"}\r\n      <strong onClick={() => changeLanguage(\"vi\")}>{t(\"Vietnamese\")}</strong>\r\n    </h5>\r\n  );\r\n};\r\n\r\nexport default SwitchLanguage;\r\n","import { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../routes/CONSTANTS\";\nimport { useRecoilValue } from \"recoil\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\nimport SwitchLanguage from \"../components/SwitchLanguage\";\nimport { Helmet } from \"react-helmet\";\n\nconst MainPage = () => {\n  const { t } = useTranslation();\n\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\n\n  return (\n    <div className=\"main-board\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Pika pika! - Main board</title>\n      </Helmet>\n      <nav className=\"navigation\">\n        <Link to={Routes.SINGLE_PLAYER_PAGE}>\n          <button onClick={() => playPopUpOnSound()}>\n            {t(\"Single player\")}\n          </button>\n        </Link>\n        <Link to={Routes.MULTI_PLAYER_PAGE}>\n          <button onClick={() => playPopUpOnSound()}>\n            {t(\"Multi player\")}\n          </button>\n        </Link>\n        <SwitchLanguage />\n      </nav>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { useTranslation } from \"react-i18next\";\n\nconst RankBoard = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"max-screen-container rank-board\">\n      <h1>{t(\"Top players\")}</h1>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4>\n            <em>{t(\"The longest is best\")}</em>\n          </h4>\n          <ol className=\"rank-list\">\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n          </ol>\n        </div>\n        <div className=\"col\">\n          <h4>\n            <em>{t(\"The fastest is best\")}</em>\n          </h4>\n          <ol className=\"rank-list\">\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n            <li>Player</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RankBoard;\n","import { atom } from \"recoil\";\nimport {\n  GameStatus,\n  GameState,\n  GameTypeState,\n  GameLevel,\n} from \"../../types/game\";\n\nconst gameState = atom<GameState>({\n  key: GameTypeState.GAME_STATE,\n  default: {\n    status: GameStatus.PENDING,\n    row: 3,\n    col: 4,\n    pokemons: {},\n    matrix: [],\n    level: GameLevel.LEVEL_1,\n  },\n});\n\nexport default gameState;\n","import { nanoid } from \"nanoid\";\nimport {\n  PointCoords,\n  Pokemon,\n  PokemonCoords,\n  Direction,\n  PointType,\n} from \"../types/game\";\n\nconst BASE_URL =\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white\";\n\nexport let pokemonList: Pokemon[] = [\n  { id: \"poke-0\", matched: false, image: `${BASE_URL}/1.png` },\n  { id: \"poke-1\", matched: false, image: `${BASE_URL}/2.png` },\n  { id: \"poke-2\", matched: false, image: `${BASE_URL}/3.png` },\n  { id: \"poke-3\", matched: false, image: `${BASE_URL}/4.png` },\n  { id: \"poke-5\", matched: false, image: `${BASE_URL}/5.png` },\n  { id: \"poke-4\", matched: false, image: `${BASE_URL}/6.png` },\n  { id: \"poke-6\", matched: false, image: `${BASE_URL}/7.png` },\n  { id: \"poke-7\", matched: false, image: `${BASE_URL}/8.png` },\n  { id: \"poke-8\", matched: false, image: `${BASE_URL}/9.png` },\n  { id: \"poke-9\", matched: false, image: `${BASE_URL}/10.png` },\n  { id: \"poke-10\", matched: false, image: `${BASE_URL}/11.png` },\n  { id: \"poke-11\", matched: false, image: `${BASE_URL}/12.png` },\n  { id: \"poke-12\", matched: false, image: `${BASE_URL}/13.png` },\n  { id: \"poke-13\", matched: false, image: `${BASE_URL}/14.png` },\n  { id: \"poke-14\", matched: false, image: `${BASE_URL}/15.png` },\n  { id: \"poke-15\", matched: false, image: `${BASE_URL}/16.png` },\n  { id: \"poke-16\", matched: false, image: `${BASE_URL}/17.png` },\n  { id: \"poke-17\", matched: false, image: `${BASE_URL}/18.png` },\n  { id: \"poke-18\", matched: false, image: `${BASE_URL}/19.png` },\n  { id: \"poke-19\", matched: false, image: `${BASE_URL}/20.png` },\n  { id: \"poke-20\", matched: false, image: `${BASE_URL}/21.png` },\n  { id: \"poke-21\", matched: false, image: `${BASE_URL}/22.png` },\n  { id: \"poke-22\", matched: false, image: `${BASE_URL}/23.png` },\n  { id: \"poke-23\", matched: false, image: `${BASE_URL}/24.png` },\n  { id: \"poke-24\", matched: false, image: `${BASE_URL}/25.png` },\n  { id: \"poke-25\", matched: false, image: `${BASE_URL}/26.png` },\n  { id: \"poke-26\", matched: false, image: `${BASE_URL}/27.png` },\n  { id: \"poke-27\", matched: false, image: `${BASE_URL}/28.png` },\n  { id: \"poke-28\", matched: false, image: `${BASE_URL}/29.png` },\n  { id: \"poke-29\", matched: false, image: `${BASE_URL}/30.png` },\n  { id: \"poke-30\", matched: false, image: `${BASE_URL}/31.png` },\n  { id: \"poke-31\", matched: false, image: `${BASE_URL}/32.png` },\n  { id: \"poke-32\", matched: false, image: `${BASE_URL}/33.png` },\n  { id: \"poke-33\", matched: false, image: `${BASE_URL}/34.png` },\n  { id: \"poke-34\", matched: false, image: `${BASE_URL}/35.png` },\n  { id: \"poke-35\", matched: false, image: `${BASE_URL}/36.png` },\n  { id: \"poke-36\", matched: false, image: `${BASE_URL}/37.png` },\n  { id: \"poke-37\", matched: false, image: `${BASE_URL}/38.png` },\n  { id: \"poke-38\", matched: false, image: `${BASE_URL}/39.png` },\n  { id: \"poke-39\", matched: false, image: `${BASE_URL}/40.png` },\n];\n\nconst convertObjectToArrayList = <Model>(\n  objectList: Record<string, Model>\n): Model[] => {\n  const arrayList: Model[] = [];\n  Object.keys(objectList).map((key) => {\n    arrayList.push(objectList[key]);\n    return key;\n  });\n  return arrayList;\n};\n\nexport const shufflePokemonList = (nonShuffleList: Pokemon[]) => {\n  const shuffledPokemonList = nonShuffleList.sort(() => Math.random() - 0.5);\n  const shuffledlistPokemon: Record<string, Pokemon> = {};\n  shuffledPokemonList.map((pokemon) => {\n    const nid = nanoid();\n    shuffledlistPokemon[nid] = pokemon;\n    return pokemon;\n  });\n\n  return shuffledlistPokemon;\n};\n\nexport const reShufflePokemonList = (pokemonList: Record<string, Pokemon>) => {\n  const arrayPokemons = convertObjectToArrayList(pokemonList);\n\n  return shufflePokemonList(arrayPokemons);\n};\n\nexport const makeListPokemons = (row: number, col: number) => {\n  const clonePokemonList: Pokemon[] = pokemonList.sort(\n    () => Math.random() - 0.5\n  );\n  // pokemonList.map((pokemon) => {\n  //   clonePokemonList.push(pokemon);\n  //   return pokemon;\n  // });\n  const total = (row * col) / 4;\n  const slicePokemonList = clonePokemonList.slice(0, total);\n  const nonShufflePokemonList = [\n    ...slicePokemonList,\n    ...slicePokemonList,\n    ...slicePokemonList,\n    ...slicePokemonList,\n  ];\n\n  return shufflePokemonList(nonShufflePokemonList);\n};\n\nexport const generatePokemonMatrix = (\n  pokemons: Record<string, Pokemon>,\n  rowSetting: number = 8,\n  colSetting: number = 10\n): { pokemonMatrix: Pokemon[][]; pokemons: Record<string, Pokemon> } => {\n  const newPokemons = { ...pokemons };\n  const totalCol = colSetting + 2;\n  const totalRow = rowSetting + 2;\n  const pokemonKeys = Object.keys(pokemons);\n  const pokemonMatrix: Pokemon[][] = [];\n\n  for (let row = 0; row < totalRow; row++) {\n    if (pokemonMatrix[row] === undefined) pokemonMatrix[row] = [];\n    for (let col = 0; col < totalCol; col++) {\n      if (\n        row === 0 ||\n        row === totalRow - 1 ||\n        col === 0 ||\n        col === totalCol - 1\n      ) {\n        const id = nanoid();\n        const borderPoint = { nid: id, id, matched: true };\n        pokemonMatrix[row].push(borderPoint);\n      } else {\n        const pokemonKey = pokemonKeys.pop();\n        if (pokemonKey) {\n          const pokemon = {\n            ...newPokemons[pokemonKey],\n            nid: pokemonKey,\n            row,\n            col,\n          };\n          newPokemons[pokemonKey] = {\n            ...newPokemons[pokemonKey],\n            rowIndex: row,\n            colIndex: col,\n          };\n          pokemonMatrix[row].push(pokemon);\n        }\n      }\n    }\n  }\n\n  return { pokemonMatrix, pokemons: newPokemons };\n};\n\nconst cloneMatrix = (matrix: Pokemon[][]) => {\n  const newMatrix = [];\n  const length = matrix.length;\n\n  for (let i = 0; i < length; i++) {\n    newMatrix[i] = matrix[i].slice();\n  }\n\n  return newMatrix;\n};\n\nexport const findPath = (\n  fromPoint: PointCoords,\n  toPoint: PointCoords,\n  matrix: Pokemon[][],\n  totalRow: number,\n  totalCol: number\n) => {\n  const matrixTotalRow = totalRow + 2;\n  const matrixTotalCol = totalCol + 2;\n  const tempMatrix = cloneMatrix(matrix);\n  const matrixPoints: boolean[][] = [];\n  const matrixTrackingPoints: (PointCoords | undefined)[][] = [];\n\n  for (let rowIndex = 0; rowIndex < matrixTotalRow; ++rowIndex) {\n    matrixPoints.push([]);\n    matrixTrackingPoints.push([]);\n    for (let colIndex = 0; colIndex < matrixTotalCol; ++colIndex) {\n      const pokemon = { ...tempMatrix[rowIndex][colIndex] };\n      matrixPoints[rowIndex].push(pokemon.matched);\n      matrixTrackingPoints[rowIndex].push(undefined);\n    }\n  }\n  const dRow: number[] = [-1, 0, 1, 0];\n  const dCol: number[] = [0, 1, 0, -1];\n  const queue = [];\n  queue.push(toPoint);\n  matrixTrackingPoints[toPoint.rowIndex][toPoint.colIndex] = {\n    rowIndex: -2,\n    colIndex: -2,\n  };\n\n  matrixPoints[fromPoint.rowIndex][fromPoint.colIndex] = true;\n  matrixPoints[toPoint.rowIndex][toPoint.colIndex] = true;\n\n  while (queue.length) {\n    const currentPoint = queue.shift();\n\n    if (currentPoint) {\n      if (\n        currentPoint?.rowIndex === fromPoint.rowIndex &&\n        currentPoint?.colIndex === fromPoint.colIndex\n      ) {\n        break;\n      }\n      for (let index = 0; index < 4; index++) {\n        let rowIndex: number = currentPoint.rowIndex + dRow[index];\n        let colIndex: number = currentPoint.colIndex + dCol[index];\n        while (\n          rowIndex >= 0 &&\n          rowIndex < matrixTotalRow &&\n          colIndex >= 0 &&\n          colIndex < matrixTotalCol &&\n          matrixPoints[rowIndex][colIndex] === true\n        ) {\n          if (matrixTrackingPoints[rowIndex][colIndex] === undefined) {\n            matrixTrackingPoints[rowIndex][colIndex] = currentPoint;\n            queue.push({ rowIndex, colIndex });\n          }\n          rowIndex += dRow[index];\n          colIndex += dCol[index];\n        }\n      }\n    }\n  }\n\n  const trackedPoints: PointCoords[] = [];\n  let trackPoint: PointCoords = { ...fromPoint };\n\n  if (matrixTrackingPoints[trackPoint.rowIndex][trackPoint.colIndex]) {\n    while (trackPoint.rowIndex !== -2 && trackPoint.colIndex !== -2) {\n      trackedPoints.push({\n        rowIndex: trackPoint.rowIndex,\n        colIndex: trackPoint.colIndex,\n      });\n      trackPoint = {\n        ...(matrixTrackingPoints[trackPoint.rowIndex][\n          trackPoint.colIndex\n        ] as PointCoords),\n      };\n    }\n  }\n\n  return trackedPoints;\n};\n\nexport const hasConnectLine = (\n  point1: PokemonCoords,\n  point2: PokemonCoords,\n  matrix: Pokemon[][],\n  totalRow: number,\n  totalCol: number\n) => {\n  const pathPoints = findPath(point1, point2, matrix, totalRow, totalCol);\n\n  return {\n    connected: pathPoints.length >= 2 && pathPoints.length <= 4,\n    pathPoints,\n  };\n};\n\nexport const checkPointInLine = (\n  connectingLinePoints: PointCoords[],\n  currentPosition: PointCoords\n) => {\n  const { rowIndex, colIndex } = currentPosition;\n\n  return connectingLinePoints.find(\n    (matchingLinePoint) =>\n      matchingLinePoint.rowIndex === rowIndex &&\n      matchingLinePoint.colIndex === colIndex\n  );\n};\n\nexport const drawPath = (\n  pathPoints: PointCoords[],\n  totalRow: number,\n  totalCol: number\n) => {\n  const limitRow = totalRow + 2;\n  const limitCol = totalCol + 2;\n  // console.log(pathPoints);\n  return pathPoints.reduce(\n    (newPathPoints, currentPoint, index, arrayPoints) => {\n      let type: PointType = PointType.LINE;\n      let direction: Direction | undefined = undefined;\n      const nextIndex = index + 1;\n      const prevIndex = index - 1;\n\n      if (arrayPoints[nextIndex] === undefined) {\n        type = PointType.END;\n      }\n\n      if (arrayPoints[prevIndex]) {\n        const prevPoint = arrayPoints[prevIndex];\n        if (prevPoint.rowIndex > currentPoint.rowIndex) {\n          direction = Direction.TOP;\n        } else if (prevPoint.rowIndex < currentPoint.rowIndex) {\n          direction = Direction.BOTTOM;\n        } else {\n          if (prevPoint.colIndex > currentPoint.colIndex) {\n            direction = Direction.LEFT;\n          } else if (prevPoint.colIndex < currentPoint.colIndex) {\n            direction = Direction.RIGHT;\n          } else {\n            if (prevPoint.rowIndex > currentPoint.rowIndex) {\n              direction = Direction.TOP;\n            } else if (prevPoint.rowIndex < currentPoint.rowIndex) {\n              direction = Direction.BOTTOM;\n            }\n          }\n        }\n\n        let extraPoint: PointCoords | undefined = {\n          ...currentPoint,\n          direction,\n          type: PointType.LINE,\n        };\n\n        // console.log(extraPoint);\n\n        do {\n          switch (extraPoint.direction) {\n            case Direction.BOTTOM:\n              extraPoint.rowIndex--;\n              if (extraPoint.rowIndex < 0) {\n                extraPoint = undefined;\n              }\n\n              break;\n\n            case Direction.TOP:\n              extraPoint.rowIndex++;\n              if (extraPoint.rowIndex >= limitRow) {\n                extraPoint = undefined;\n              }\n              break;\n\n            case Direction.LEFT:\n              extraPoint.colIndex++;\n              if (extraPoint.colIndex >= limitCol) {\n                extraPoint = undefined;\n              }\n              break;\n\n            case Direction.RIGHT:\n              extraPoint.colIndex--;\n              if (extraPoint.colIndex < 0) {\n                extraPoint = undefined;\n              }\n              break;\n\n            default:\n              break;\n          }\n          if (extraPoint === undefined) {\n            break;\n          }\n          if (\n            extraPoint.rowIndex === prevPoint.rowIndex &&\n            extraPoint.colIndex === prevPoint.colIndex\n          ) {\n            break;\n          }\n\n          newPathPoints.push({ ...extraPoint });\n        } while (extraPoint !== undefined);\n      } else {\n        type = PointType.START;\n      }\n      const newCurrentPoint = { ...currentPoint, direction, type };\n\n      newPathPoints.push(newCurrentPoint);\n\n      return newPathPoints;\n    },\n    [] as PointCoords[]\n  );\n};\n\nexport const checkConnectionSelectedPokemons = (\n  selectedPokemons: PokemonCoords[],\n  pokemons: Record<string, Pokemon>,\n  matrix: Pokemon[][],\n  rowSetting: number,\n  colSetting: number\n) => {\n  const newPokemons = { ...pokemons };\n  const newSelectedPokemons = [...selectedPokemons];\n  const [selectedPokemon1, selectedPokemon2] = newSelectedPokemons;\n  let connectingLinePoints: PointCoords[] = [];\n  let newMatrix = [...matrix];\n\n  if (\n    selectedPokemon1?.nid &&\n    selectedPokemon2?.nid &&\n    pokemons[selectedPokemon1.nid].id === pokemons[selectedPokemon2.nid].id\n  ) {\n    const { connected, pathPoints } = hasConnectLine(\n      selectedPokemon1,\n      selectedPokemon2,\n      matrix,\n      rowSetting,\n      colSetting\n    );\n\n    if (connected) {\n      connectingLinePoints = drawPath(pathPoints, rowSetting, colSetting);\n\n      newPokemons[selectedPokemon1.nid] = {\n        ...newPokemons[selectedPokemon1.nid],\n        matched: true,\n      };\n      newPokemons[selectedPokemon2.nid] = {\n        ...newPokemons[selectedPokemon2.nid],\n        matched: true,\n      };\n      const { pokemonMatrix } = generatePokemonMatrix(\n        newPokemons,\n        rowSetting,\n        colSetting\n      );\n      newMatrix = pokemonMatrix;\n    } else {\n      connectingLinePoints = [{ rowIndex: -1, colIndex: -1 }];\n    }\n\n    newSelectedPokemons.length = 0;\n  } else {\n    if (selectedPokemons.length === 2) {\n      newSelectedPokemons.length = 0;\n      connectingLinePoints = [{ rowIndex: -1, colIndex: -1 }];\n    }\n  }\n\n  return {\n    newSelectedPokemons,\n    newMatrix,\n    newPokemons,\n    connectingLinePoints,\n  };\n};\n\nexport const checkCompletedLevel = (pokemons: Record<string, Pokemon>) => {\n  return (\n    Object.keys(pokemons).length &&\n    Object.entries(pokemons).findIndex(\n      ([_, pokemon]) => pokemon.matched === false\n    ) === -1\n  );\n};\n\nexport const hasAnyConnectLine = (\n  pokemons: Record<string, Pokemon>,\n  matrix: Pokemon[][],\n  totalRow: number,\n  totalCol: number\n) => {\n  let foundConnectLine = false;\n  const entriesPokemons = Object.entries(pokemons);\n\n  while (entriesPokemons.length) {\n    const entryPokemon = entriesPokemons.pop();\n\n    if (entryPokemon === undefined) {\n      break;\n    }\n    const [nid, currentPokemon] = entryPokemon;\n\n    if (currentPokemon.matched === false) {\n      foundConnectLine = entriesPokemons.some(([nid, pokemon]) => {\n        if (currentPokemon.id === pokemon.id && pokemon.matched === false) {\n          const { connected } = hasConnectLine(\n            currentPokemon as PointCoords,\n            pokemon as PointCoords,\n            matrix,\n            totalRow,\n            totalCol\n          );\n\n          // if (connected) {\n          //   console.log(\n          //     \"debug thôi, đừng có xem\",\n          //     currentPokemon.rowIndex,\n          //     currentPokemon.colIndex,\n          //     pokemon.rowIndex,\n          //     pokemon.colIndex\n          //   );\n          // }\n\n          return connected;\n        }\n\n        return false;\n      });\n      if (foundConnectLine) {\n        break;\n      }\n    }\n  }\n\n  return foundConnectLine;\n};\n","import { atom } from \"recoil\";\nimport { GameOverlayState, GameTypeState } from \"../../types/game\";\n\nconst gameOverlayState = atom<GameOverlayState>({\n  key: GameTypeState.GAME_OVERLAY_STATE,\n  default: {\n    connectingLinePoints: [],\n  },\n});\n\nexport default gameOverlayState;\n","import { atom } from \"recoil\";\nimport { GameTypeState, PokemonCoords } from \"../../types/game\";\n\nconst selectedPokemonsState = atom<PokemonCoords[]>({\n  key: GameTypeState.SELECTED_POKEMONS,\n  default: [],\n});\n\nexport default selectedPokemonsState;\n","import { selector } from \"recoil\";\nimport { GameSelector, PokemonCoords } from \"../../types/game\";\nimport { checkConnectionSelectedPokemons } from \"../../utils/game\";\nimport gameState from \"../atoms/gameState\";\nimport gameOverlayState from \"../atoms/gameOverlayState\";\nimport selectedPokemonsState from \"../atoms/selectedPokemonsState\";\n\nconst selectedPokemonsSelector = selector({\n  key: GameSelector.SELECTED_POKEMONS_SELECTOR,\n  get: ({ get }) => {\n    const selectedPokemons = get(selectedPokemonsState);\n    return selectedPokemons;\n  },\n  set: ({ set, get }, newValue) => {\n    const { row, col, status, matrix, pokemons, level } = get(gameState);\n    const selectedPokemons = get(selectedPokemonsState);\n\n    const cloneSelectedPokemons = [...selectedPokemons];\n\n    cloneSelectedPokemons.push(newValue as PokemonCoords);\n\n    const {\n      connectingLinePoints,\n      newMatrix,\n      newPokemons,\n      newSelectedPokemons,\n    } = checkConnectionSelectedPokemons(\n      cloneSelectedPokemons,\n      pokemons,\n      matrix,\n      row,\n      col\n    );\n\n    if (connectingLinePoints.length >= 1) {\n      if (connectingLinePoints.length > 1) {\n        set(gameState, {\n          row,\n          col,\n          status,\n          level,\n          matrix: newMatrix,\n          pokemons: newPokemons,\n        });\n      }\n      set(gameOverlayState, {\n        connectingLinePoints,\n      });\n    }\n\n    set(selectedPokemonsState, newSelectedPokemons);\n  },\n});\n\nexport default selectedPokemonsSelector;\n","import { useRecoilValue, useResetRecoilState, useSetRecoilState } from \"recoil\";\nimport gameState from \"../recoil/atoms/gameState\";\nimport selectedPokemonsSelector from \"../recoil/selectors/selectedPokemonsSelector\";\nimport selectedPokemonsState from \"../recoil/atoms/selectedPokemonsState\";\nimport gameOverlayState from \"../recoil/atoms/gameOverlayState\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\n\nexport function useGameSpeedActions() {\n  const setSelectedPokemons = useSetRecoilState(selectedPokemonsSelector);\n  const resetGameState = useResetRecoilState(gameState);\n  const resetGameOverlayState = useResetRecoilState(gameOverlayState);\n  const resetSelectedPokemonsState = useResetRecoilState(selectedPokemonsState);\n  const { playBiteSound } = useRecoilValue(gameSoundState);\n\n  const selectPokemon = (\n    pokemonId: string,\n    rowIndex: number,\n    colIndex: number\n  ) => {\n    playBiteSound();\n    setSelectedPokemons({ nid: pokemonId, rowIndex, colIndex });\n  };\n\n  const resetGame = () => {\n    resetGameState();\n    resetGameOverlayState();\n    resetSelectedPokemonsState();\n  };\n\n  return {\n    selectPokemon,\n    resetGame,\n  };\n}\n","import { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport RankBoard from \"../components/RankBoard\";\nimport { Routes } from \"../routes/CONSTANTS\";\nimport { useGameSpeedActions } from \"../hooks/useGameSpeedActions\";\nimport { useEffect } from \"react\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\nimport { useRecoilValue } from \"recoil\";\nimport SwitchLanguage from \"../components/SwitchLanguage\";\nimport { Helmet } from \"react-helmet\";\n\nconst SinglePlayerPage = () => {\n  const { t } = useTranslation();\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\n  const { resetGame } = useGameSpeedActions();\n\n  useEffect(() => {\n    resetGame();\n  }, [resetGame]);\n\n  return (\n    <div className=\"game-container\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Pika pika! - Single player</title>\n      </Helmet>\n      <div className=\"game-board\">\n        <RankBoard />\n      </div>\n      <div className=\"sidebar\">\n        <div className=\"game-info\">\n          <h1 className=\"game-title\">{t(\"Single player\")}</h1>\n        </div>\n        <div>\n          <Link to={Routes.SURVIVAL_MODE_PAGE}>\n            <button onClick={() => playPopUpOnSound()}>\n              {t(\"Survival mode\")}\n            </button>\n          </Link>\n          <Link to={Routes.SPEED_MODE_PAGE}>\n            <button onClick={() => playPopUpOnSound()}>\n              {t(\"Speed mode\")}\n            </button>\n          </Link>\n          <Link to={Routes.MAIN_PAGE}>\n            <button onClick={() => playPopUpOnSound()}>{t(\"Back\")}</button>\n          </Link>\n        </div>\n        <SwitchLanguage />\n      </div>\n    </div>\n  );\n};\n\nexport default SinglePlayerPage;\n","import { Helmet } from \"react-helmet\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\nimport { Routes } from \"../routes/CONSTANTS\";\n\nconst MultiPlayerPage = () => {\n  const { t } = useTranslation();\n\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\n\n  return (\n    <div className=\"main-board\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Pika pika! - Multi player</title>\n      </Helmet>\n      <div className=\"text-center\">\n        <p className=\"text-coming-soon\">{t(\"Coming soon...\")}</p>\n        <Link to={Routes.MAIN_PAGE}>\n          <button onClick={() => playPopUpOnSound()}>{t(\"Main menu\")}</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MultiPlayerPage;\n","import { FC, memo } from \"react\";\nimport { Pokemon } from \"../../types/game\";\n\ntype PokemonCardProps = {\n  pokemon: Pokemon;\n  rowIndex: number;\n  colIndex: number;\n  isSelected: number | boolean;\n  selectPokemon: (\n    pokemonId: string,\n    rowIndex: number,\n    colIndex: number\n  ) => void;\n};\n\nconst PokemonCard: FC<PokemonCardProps> = ({\n  pokemon,\n  rowIndex,\n  colIndex,\n  isSelected,\n  selectPokemon,\n}) => {\n  const selected = isSelected ? \"selected\" : \"\";\n  const hidden = pokemon.matched ? \"hidden\" : \"\";\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${pokemon.image ?? \"\"})`,\n      }}\n      className={`pokemon-card ${selected} ${hidden}`}\n      onClick={() => {\n        if (!isSelected && !pokemon.matched && pokemon.nid) {\n          selectPokemon(pokemon.nid, rowIndex, colIndex);\n        }\n      }}\n    />\n  );\n};\n\nfunction propsAreEquals(\n  prevProps: PokemonCardProps,\n  nextProps: PokemonCardProps\n) {\n  return (\n    prevProps.pokemon.nid === nextProps.pokemon.nid &&\n    prevProps.pokemon.image === nextProps.pokemon.image &&\n    prevProps.pokemon.matched === nextProps.pokemon.matched &&\n    prevProps.isSelected === nextProps.isSelected\n  );\n}\n\nexport default memo(PokemonCard, propsAreEquals);\n","import { FC } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { useGameSpeedActions } from \"../../hooks/useGameSpeedActions\";\nimport selectedPokemonsState from \"../../recoil/atoms/selectedPokemonsState\";\n\nimport { Pokemon } from \"../../types/game\";\nimport PokemonCard from \"./PokemonCard\";\n\ntype PokemonRowProps = {\n  pokemons: Pokemon[];\n  rowIndex: number;\n};\n\nconst PokemonRow: FC<PokemonRowProps> = ({ pokemons, rowIndex }) => {\n  const selectedPokemons = useRecoilValue(selectedPokemonsState);\n  const { selectPokemon } = useGameSpeedActions();\n  return (\n    <>\n      {pokemons.map((pokemon, index) => (\n        <PokemonCard\n          key={`card-${index}`}\n          pokemon={pokemon}\n          rowIndex={rowIndex}\n          colIndex={index}\n          isSelected={\n            pokemon.nid !== undefined &&\n            selectedPokemons.findIndex(({ nid }) => nid === pokemon.nid) >= 0\n          }\n          selectPokemon={selectPokemon}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PokemonRow;\n","import { atom } from \"recoil\";\r\nimport { GameTypeState } from \"../../types/game\";\r\n\r\nconst gameTimingState = atom<{ timing: number; yourTiming?: number }>({\r\n  key: GameTypeState.GAME_TIMING_STATE,\r\n  default: {\r\n    timing: 0,\r\n    yourTiming: 0,\r\n  },\r\n});\r\n\r\nexport default gameTimingState;\r\n","import { useCallback, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\nimport gameState from \"../recoil/atoms/gameState\";\nimport gameTimingState from \"../recoil/atoms/gameTimingState\";\nimport {\n  GameLevel,\n  GameMode,\n  gameOptions,\n  GameStatus,\n  nextLevel,\n  Pokemon,\n} from \"../types/game\";\nimport {\n  generatePokemonMatrix,\n  makeListPokemons,\n  checkCompletedLevel,\n  hasAnyConnectLine,\n  reShufflePokemonList,\n} from \"../utils/game\";\n\nexport default function useGameEngine(mode: GameMode) {\n  const location = useLocation();\n  const setGame = useSetRecoilState(gameState);\n  const setGameTiming = useSetRecoilState(gameTimingState);\n  const {\n    playFanfareSound,\n    playLevelUpSound,\n    playCompletedGameSound,\n    playYouWinSound,\n  } = useRecoilValue(gameSoundState);\n  const { matrix, row, col, status, pokemons, level } =\n    useRecoilValue(gameState);\n\n  const initGame = useCallback(\n    (level: GameLevel) => {\n      const { row, col } = gameOptions[level];\n      const pokemons = makeListPokemons(row, col);\n      const { pokemonMatrix, pokemons: newPokemons } = generatePokemonMatrix(\n        pokemons,\n        row,\n        col\n      );\n      setGame({\n        pokemons: newPokemons,\n        matrix: pokemonMatrix,\n        level,\n        row,\n        col,\n        status: GameStatus.RUNNING,\n      });\n    },\n    [setGame]\n  );\n\n  const replayGame = () => {\n    playFanfareSound();\n    initGame(GameLevel.LEVEL_1);\n    if (mode === GameMode.SURVIVAL_MODE) {\n      setGameTiming({ timing: 30, yourTiming: 0 });\n    }\n    if (mode === GameMode.SPEED_MODE) {\n      setGameTiming({ timing: 0 });\n    }\n  };\n\n  const endGame = () => {\n    if (mode === GameMode.SURVIVAL_MODE) {\n      playYouWinSound();\n      setGame({\n        matrix,\n        row,\n        col,\n        pokemons,\n        level,\n        status: GameStatus.COMPLETED,\n      });\n    }\n  };\n\n  const shuffleMatrix = (pokemons: Record<string, Pokemon>) => {\n    const newShufflePokemons = reShufflePokemonList(pokemons);\n    const { pokemonMatrix, pokemons: newPokemons } = generatePokemonMatrix(\n      newShufflePokemons,\n      row,\n      col\n    );\n    setGame({\n      pokemons: newPokemons,\n      matrix: pokemonMatrix,\n      level,\n      row,\n      col,\n      status: GameStatus.RUNNING,\n    });\n  };\n\n  useEffect(() => {\n    if (status === GameStatus.PENDING) {\n      playFanfareSound();\n      initGame(level);\n      if (mode === GameMode.SURVIVAL_MODE) {\n        setGameTiming({ timing: 300, yourTiming: 0 });\n      }\n      if (mode === GameMode.SPEED_MODE) {\n        setGameTiming({ timing: 0 });\n      }\n    }\n    return () => {\n      // cleanup\n    };\n  }, [status, initGame]);\n\n  useEffect(() => {\n    if (checkCompletedLevel(pokemons)) {\n      const levelUp: GameLevel = nextLevel[level];\n      if (level !== levelUp || mode === GameMode.SURVIVAL_MODE) {\n        initGame(levelUp);\n        playCompletedGameSound();\n      } else {\n        if (mode === GameMode.SPEED_MODE) {\n          playYouWinSound();\n          setGame({\n            matrix,\n            row,\n            col,\n            pokemons,\n            level,\n            status: GameStatus.COMPLETED,\n          });\n        }\n      }\n    } else {\n      if (\n        Object.keys(pokemons).length &&\n        hasAnyConnectLine(pokemons, matrix, row, col) === false\n      ) {\n        shuffleMatrix(pokemons);\n        playLevelUpSound();\n      }\n    }\n  }, [pokemons]);\n\n  useEffect(() => {\n    if (status === GameStatus.RUNNING) {\n      playFanfareSound();\n      initGame(GameLevel.LEVEL_1);\n      if (mode === GameMode.SURVIVAL_MODE) {\n        setGameTiming({ timing: 300, yourTiming: 0 });\n      }\n      if (mode === GameMode.SPEED_MODE) {\n        setGameTiming({ timing: 0 });\n      }\n    }\n  }, [location]);\n\n  return {\n    initGame,\n    replayGame,\n    endGame,\n    matrix,\n    row,\n    col,\n    status,\n    level,\n  };\n}\n","import PokemonRow from \"./Game/PokemonRow\";\nimport useGameEngine from \"../hooks/useGameEngine\";\nimport { GameMode } from \"../types/game\";\nimport { FC } from \"react\";\n\nconst GameBoard: FC<{ mode: GameMode }> = ({ mode }) => {\n  const { matrix, row, col } = useGameEngine(mode);\n\n  return (\n    <div className={`game-pokemon board-${row}x${col}`}>\n      {matrix &&\n        matrix.map((pokemons, index) => (\n          <PokemonRow\n            key={`row-${index}`}\n            rowIndex={index}\n            pokemons={pokemons}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default GameBoard;\n","import { FC, memo, useEffect, useRef } from \"react\";\nimport { PointCoords } from \"../../types/game\";\n\ntype LineCardProps = {\n  point?: PointCoords;\n  rowIndex: number;\n  colIndex: number;\n};\n\nconst LineCard: FC<LineCardProps> = ({ point, rowIndex, colIndex }) => {\n  const type = point && point.type ? `${point.type}-point` : \"\";\n  const direction =\n    point && point.direction ? `${point.direction}-direction` : \"\";\n  const pointClass = point ? `in-line ${direction} ${type}` : \"\";\n  const lineRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    setTimeout(() => {\n      if (lineRef.current) {\n        direction && lineRef.current.classList.remove(direction);\n        type && lineRef.current.classList.remove(type);\n      }\n    }, 300);\n    return () => {};\n  }, [lineRef, direction, type]);\n\n  return (\n    <div ref={lineRef} className={`line-card ${pointClass}`}>\n      <strong>\n        {rowIndex},{colIndex}\n      </strong>\n    </div>\n  );\n};\n\nfunction propsAreEquals(prevProps: LineCardProps, nextProps: LineCardProps) {\n  if (prevProps.point === undefined && nextProps.point === undefined) {\n    return true;\n  }\n\n  return (\n    prevProps.point?.direction === nextProps.point?.direction &&\n    prevProps.point?.type === nextProps.point?.type\n  );\n}\n\nexport default memo(LineCard, propsAreEquals);\n","import { FC } from \"react\";\nimport { PointCoords, Pokemon } from \"../../types/game\";\nimport { checkPointInLine } from \"../../utils/game\";\nimport LineCard from \"./LineCard\";\n\ntype LineRowProps = {\n  cards: Pokemon[] | number[];\n  rowIndex: number;\n  connectingLinePoints: PointCoords[];\n};\n\nconst LineRow: FC<LineRowProps> = ({\n  cards,\n  rowIndex,\n  connectingLinePoints,\n}) => {\n  return (\n    <>\n      {cards.map((_, colIndex) => (\n        <LineCard\n          key={`card-${colIndex}`}\n          rowIndex={rowIndex}\n          colIndex={colIndex}\n          point={checkPointInLine(connectingLinePoints, { rowIndex, colIndex })}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default LineRow;\n","import { FC } from \"react\";\nimport LineRow from \"./Game/LineRow\";\nimport useGameOverlayEngine from \"../hooks/useGameOverlayEngine\";\nimport { GameMode } from \"../types/game\";\n\ntype GameOverlayProps = {\n  mode: GameMode;\n};\n\nconst GameOverlay: FC<GameOverlayProps> = ({ mode }) => {\n  const { connectingLinePoints, matrix, row, col } = useGameOverlayEngine(mode);\n\n  const columnCards = new Array(col + 2).fill(false);\n\n  return (\n    <div className={`game-overlay board-${row}x${col}`}>\n      {matrix &&\n        matrix.map((_, index) => (\n          <LineRow\n            key={`row-${index}`}\n            cards={columnCards}\n            rowIndex={index}\n            connectingLinePoints={connectingLinePoints}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default GameOverlay;\n","import { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport gameState from \"../recoil/atoms/gameState\";\nimport gameOverlayState from \"../recoil/atoms/gameOverlayState\";\nimport { useEffect } from \"react\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\nimport { GameMode } from \"../types/game\";\nimport gameTimingState from \"../recoil/atoms/gameTimingState\";\n\nexport default function useGameOverlayEngine(mode: GameMode) {\n  const { connectingLinePoints } = useRecoilValue(gameOverlayState);\n  const { matrix, row, col, status } = useRecoilValue(gameState);\n  const { playRisingPopSound, playGlugSound } = useRecoilValue(gameSoundState);\n  const setGameTiming = useSetRecoilState(gameTimingState);\n\n  useEffect(() => {\n    if (connectingLinePoints.length === 1) {\n      playGlugSound();\n      if (mode === GameMode.SPEED_MODE) {\n        setGameTiming((gameTiming) => ({ timing: gameTiming.timing + 5 }));\n      }\n      if (mode === GameMode.SURVIVAL_MODE) {\n        setGameTiming((gameTiming) => ({\n          ...gameTiming,\n          timing: gameTiming.timing - 5,\n        }));\n      }\n    }\n    if (connectingLinePoints.length > 1) {\n      playRisingPopSound();\n      if (mode === GameMode.SURVIVAL_MODE) {\n        setGameTiming((gameTiming) => ({\n          ...gameTiming,\n          timing: gameTiming.timing + 2,\n        }));\n      }\n    }\n  }, [connectingLinePoints]);\n\n  return {\n    connectingLinePoints,\n    matrix,\n    row,\n    col,\n    status,\n  };\n}\n","export function timeConvert(num: number) {\n  if (num <= 0) {\n    return \"00:00\";\n  }\n  const hours = Math.floor(num / 60);\n  const minutes = num % 60;\n  return (\n    hours.toString().padStart(2, \"0\") +\n    \":\" +\n    minutes.toString().padStart(2, \"0\")\n  );\n}\n","import { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport useGameEngine from \"../../hooks/useGameEngine\";\r\nimport gameState from \"../../recoil/atoms/gameState\";\r\nimport gameTimingState from \"../../recoil/atoms/gameTimingState\";\r\nimport { GameMode, GameStatus } from \"../../types/game\";\r\nimport { timeConvert } from \"../../utils/time\";\r\n\r\nconst GameSpeedInfo = () => {\r\n  const { t } = useTranslation();\r\n  const { level, status } = useRecoilValue(gameState);\r\n  const [gameTiming, setGameTiming] = useRecoilState(gameTimingState);\r\n  const { timing } = gameTiming;\r\n  const { replayGame } = useGameEngine(GameMode.SPEED_MODE);\r\n\r\n  useEffect(() => {\r\n    let timeoutId: NodeJS.Timeout | undefined = undefined;\r\n\r\n    if (status === GameStatus.RUNNING) {\r\n      timeoutId = setTimeout(() => {\r\n        setGameTiming({\r\n          timing: timing + 1,\r\n        });\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n    };\r\n  }, [timing, status]);\r\n\r\n  return (\r\n    <div className=\"game-info\">\r\n      <h1 className=\"game-title\">\r\n        {status === GameStatus.COMPLETED\r\n          ? t(\"Congratulations!\")\r\n          : t(\"Speed mode\")}\r\n      </h1>\r\n      <h3 className=\"game-title\">\r\n        {t(\"Level\")} {level} / 14\r\n      </h3>\r\n      <p className=\"text-center\">\r\n        {t(\"Your time\")}: {timeConvert(timing)}\r\n      </p>\r\n      <p>\r\n        <button onClick={replayGame}>{t(\"Replay\")}</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSpeedInfo;\r\n","import { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../routes/CONSTANTS\";\nimport GameBoard from \"../components/GameBoard\";\nimport GameOverlay from \"../components/GameOverlay\";\nimport { useRecoilValue } from \"recoil\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\nimport gameState from \"../recoil/atoms/gameState\";\nimport GameSpeedInfo from \"../components/Game/GameSpeedInfo\";\nimport SwitchLanguage from \"../components/SwitchLanguage\";\nimport { GameMode } from \"../types/game\";\nimport { Helmet } from \"react-helmet\";\n\nconst SpeedModePage = () => {\n  const { t } = useTranslation();\n  const { status } = useRecoilValue(gameState);\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\n\n  return (\n    <div className=\"game-container\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Pika pika! - Speed mode board</title>\n      </Helmet>\n      <div className={`game-board game-${status}`}>\n        <GameSpeedInfo />\n        <GameOverlay mode={GameMode.SPEED_MODE} />\n        <GameBoard mode={GameMode.SPEED_MODE} />\n      </div>\n      <div className=\"sidebar\">\n        <GameSpeedInfo />\n        <div>\n          <blockquote className=\"game-helper\">\n            {t(\"Please complete all levels as fast as you can\")}\n          </blockquote>\n          <blockquote className=\"game-helper\">\n            {t(\"Choosing the wrong pair will increase the time\")}\n          </blockquote>\n        </div>\n        <Link to={Routes.SINGLE_PLAYER_PAGE}>\n          <button onClick={() => playPopUpOnSound()}>{t(\"Back\")}</button>\n        </Link>\n        <p className=\"mobile-helper\">{t(\"Scroll down to play\")}</p>\n        <SwitchLanguage />\n      </div>\n    </div>\n  );\n};\n\nexport default SpeedModePage;\n","import { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport useGameEngine from \"../../hooks/useGameEngine\";\r\nimport gameState from \"../../recoil/atoms/gameState\";\r\nimport gameTimingState from \"../../recoil/atoms/gameTimingState\";\r\nimport { GameMode, GameStatus } from \"../../types/game\";\r\nimport { timeConvert } from \"../../utils/time\";\r\n\r\nconst GameSurvivalInfo = () => {\r\n  const { t } = useTranslation();\r\n  const { level, status } = useRecoilValue(gameState);\r\n  const [gameTiming, setGameTiming] = useRecoilState(gameTimingState);\r\n  const { timing, yourTiming = 0 } = gameTiming;\r\n  const { replayGame, endGame } = useGameEngine(GameMode.SURVIVAL_MODE);\r\n\r\n  useEffect(() => {\r\n    let timeoutId: NodeJS.Timeout | undefined = undefined;\r\n\r\n    if (status === GameStatus.RUNNING) {\r\n      if (timing <= 0) {\r\n        endGame();\r\n      } else {\r\n        timeoutId = setTimeout(() => {\r\n          setGameTiming({\r\n            yourTiming: yourTiming + 1,\r\n            timing: timing - 1,\r\n          });\r\n        }, 1000);\r\n      }\r\n    }\r\n    return () => {\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n    };\r\n  }, [timing, status]);\r\n\r\n  return (\r\n    <div className=\"game-info\">\r\n      <h1 className=\"game-title\">\r\n        {status === GameStatus.COMPLETED\r\n          ? t(\"Congratulations!\")\r\n          : t(\"Survival mode\")}\r\n      </h1>\r\n      <h3 className=\"game-title\">\r\n        {t(\"Level\")} {level} / 14\r\n      </h3>\r\n      <p className=\"text-center\">\r\n        {t(\"Your time\")}: {yourTiming && timeConvert(yourTiming)}\r\n      </p>\r\n      <p className=\"text-center\">\r\n        {t(\"Remaining time\")}: {timeConvert(timing)}\r\n      </p>\r\n      <p>\r\n        <button onClick={replayGame}>{t(\"Replay\")}</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSurvivalInfo;\r\n","import { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../routes/CONSTANTS\";\nimport GameBoard from \"../components/GameBoard\";\nimport GameOverlay from \"../components/GameOverlay\";\nimport { useRecoilValue } from \"recoil\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\nimport gameState from \"../recoil/atoms/gameState\";\nimport SwitchLanguage from \"../components/SwitchLanguage\";\nimport GameSurvivalInfo from \"../components/Game/GameSurvivalInfo\";\nimport { GameMode } from \"../types/game\";\nimport { Helmet } from \"react-helmet\";\n\nconst SurvivalModePage = () => {\n  const { t } = useTranslation();\n  const { status } = useRecoilValue(gameState);\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\n\n  return (\n    <div className=\"game-container\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Pika pika! - Survival mode board</title>\n      </Helmet>\n      <div className={`game-board game-${status}`}>\n        <GameSurvivalInfo />\n        <GameOverlay mode={GameMode.SURVIVAL_MODE} />\n        <GameBoard mode={GameMode.SURVIVAL_MODE} />\n      </div>\n      <div className=\"sidebar\">\n        <GameSurvivalInfo />\n        <div>\n          <blockquote className=\"game-helper\">\n            {t(\"Try your best not to run out of time as long as possible\")}\n          </blockquote>\n          <blockquote className=\"game-helper\">\n            {t(\"Your time will increase when you match a pair of pokemon\")}\n          </blockquote>\n          <blockquote className=\"game-helper\">\n            {t(\"Choosing the wrong pair will decrease the time\")}\n          </blockquote>\n        </div>\n        <Link to={Routes.SINGLE_PLAYER_PAGE}>\n          <button onClick={() => playPopUpOnSound()}>{t(\"Back\")}</button>\n        </Link>\n        <p className=\"mobile-helper\">{t(\"Scroll down to play\")}</p>\n        <SwitchLanguage />\n      </div>\n    </div>\n  );\n};\n\nexport default SurvivalModePage;\n","import \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport { Routes } from \"./routes/CONSTANTS\";\nimport SinglePlayerPage from \"./pages/SinglePlayerPage\";\nimport MultiPlayerPage from \"./pages/MultiPlayerPage\";\nimport SpeedModePage from \"./pages/SpeedModePage\";\nimport { useRecoilValue } from \"recoil\";\nimport gameSoundState from \"./recoil/atoms/gameSoundState\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"./services/i18n\";\nimport { useEffect } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport SurvivalModePage from \"./pages/SurvivalModePage\";\n\nfunction App() {\n  const { t } = useTranslation();\n  const { soundReady } = useRecoilValue(gameSoundState);\n  const [storageValue] = useLocalStorage(\"language\", \"vi\");\n  useEffect(() => {\n    i18n.changeLanguage(storageValue);\n  }, [storageValue]);\n\n  return (\n    <div className=\"app\">\n      {!soundReady && <h1>{t(\"Preparing resource...\")}</h1>}\n      {soundReady && (\n        <Switch>\n          <Route path={Routes.MAIN_PAGE} exact>\n            <MainPage />\n          </Route>\n          <Route path={Routes.SINGLE_PLAYER_PAGE} exact>\n            <SinglePlayerPage />\n          </Route>\n          <Route path={Routes.MULTI_PLAYER_PAGE} exact>\n            <MultiPlayerPage />\n          </Route>\n          <Route path={Routes.SPEED_MODE_PAGE} exact>\n            <SpeedModePage />\n          </Route>\n          <Route path={Routes.SURVIVAL_MODE_PAGE} exact>\n            <SurvivalModePage />\n          </Route>\n          <Route path=\"*\">\n            <MainPage />\n          </Route>\n        </Switch>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import useSound from \"use-sound\";\nimport { SpriteMap } from \"use-sound/dist/types\";\n\nimport menuOpenSound from \"../assets/sound/menu-open.mp3\";\nimport disableSound from \"../assets/sound/disable-sound.mp3\";\nimport enableSound from \"../assets/sound/enable-sound.mp3\";\nimport onSound from \"../assets/sound/switch-on.mp3\";\nimport offSound from \"../assets/sound/switch-off.mp3\";\nimport biteSound from \"../assets/sound/bite.mp3\";\nimport fanfareSound from \"../assets/sound/fanfare.mp3\";\nimport glugSound from \"../assets/sound/glug-a.mp3\";\nimport risingPopSound from \"../assets/sound/rising-pops.mp3\";\nimport completeGameSound from \"../assets/sound/game-completion.wav\";\nimport failedGameSound from \"../assets/sound/gamers-fail-game.mp3\";\nimport nearlyEndTimeSound from \"../assets/sound/time-limited.wav\";\nimport levelUpSound from \"../assets/sound/levelup.mp3\";\nimport popDownSound from \"../assets/sound/pop-down.mp3\";\nimport popUpOnSound from \"../assets/sound/pop-up-on.mp3\";\nimport popUpOffSound from \"../assets/sound/pop-up-off.mp3\";\nimport youWinSound from \"../assets/sound/you-win.mp3\";\n\nexport enum Sound {\n  MENU_OPEN = \"MENU_OPEN\",\n  BITE = \"BITE\",\n  DISABLE = \"DISABLE\",\n  ENABLE = \"ENABLE\",\n  ON = \"ON\",\n  OFF = \"OFF\",\n  FANFARE = \"FANFARE\",\n  GLUG = \"GLUG\",\n  RISING_POP = \"RISING_POP\",\n  COMPLETE_GAME = \"COMPLETE_GAME\",\n  FAIL_GAME = \"FAIL_GAME\",\n  NEARLY_END_TIME = \"NEARLY_END_TIME\",\n  LEVEL_UP = \"LEVEL_UP\",\n  POP_DOWN = \"POP_DOWN\",\n  POP_UP_ON = \"POP_UP_ON\",\n  POP_UP_OFF = \"POP_UP_OFF\",\n  YOU_WIN = \"YOU_WIN\",\n}\n\ninterface SoundOptions {\n  id?: string;\n  volume?: number;\n  playbackRate?: number;\n  interrupt?: boolean;\n  soundEnabled?: boolean;\n  sprite?: SpriteMap;\n  onload?: () => void;\n}\n\nexport default function usePlaySound(sound?: Sound) {\n  const defaultConfigSound: SoundOptions = {\n    interrupt: true,\n    // volume: 1,\n  };\n  let soundPath = menuOpenSound;\n  if (sound) {\n    switch (sound) {\n      case Sound.BITE:\n        soundPath = biteSound;\n        break;\n      case Sound.COMPLETE_GAME:\n        soundPath = completeGameSound;\n        break;\n      case Sound.DISABLE:\n        soundPath = disableSound;\n        break;\n      case Sound.ENABLE:\n        soundPath = enableSound;\n        break;\n      case Sound.ON:\n        soundPath = onSound;\n        break;\n      case Sound.OFF:\n        soundPath = offSound;\n        break;\n      case Sound.FAIL_GAME:\n        soundPath = failedGameSound;\n        break;\n      case Sound.GLUG:\n        soundPath = glugSound;\n        break;\n      case Sound.FANFARE:\n        soundPath = fanfareSound;\n        break;\n      case Sound.RISING_POP:\n        soundPath = risingPopSound;\n        break;\n      case Sound.NEARLY_END_TIME:\n        soundPath = nearlyEndTimeSound;\n        break;\n      case Sound.LEVEL_UP:\n        soundPath = levelUpSound;\n        break;\n      case Sound.POP_DOWN:\n        soundPath = popDownSound;\n        break;\n      case Sound.POP_UP_ON:\n        soundPath = popUpOnSound;\n        break;\n      case Sound.POP_UP_OFF:\n        soundPath = popUpOffSound;\n        break;\n      case Sound.YOU_WIN:\n        soundPath = youWinSound;\n        break;\n      default:\n        soundPath = menuOpenSound;\n        break;\n    }\n  }\n\n  const [\n    play,\n    { sound: loadedSound, stop: stopSound, pause: pauseSound, duration },\n  ] = useSound(soundPath, defaultConfigSound);\n\n  return {\n    playSound: play,\n    loadedSound,\n    stopSound,\n    pauseSound,\n    duration,\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/menu-open.019cf647.mp3\";","export default __webpack_public_path__ + \"static/media/disable-sound.477d0574.mp3\";","export default __webpack_public_path__ + \"static/media/enable-sound.00d0be95.mp3\";","export default __webpack_public_path__ + \"static/media/switch-on.88d10ee7.mp3\";","export default __webpack_public_path__ + \"static/media/switch-off.e5ebe933.mp3\";","export default __webpack_public_path__ + \"static/media/bite.aea7caff.mp3\";","export default __webpack_public_path__ + \"static/media/fanfare.8807360a.mp3\";","export default __webpack_public_path__ + \"static/media/glug-a.b9f1fa99.mp3\";","export default __webpack_public_path__ + \"static/media/rising-pops.7eda816b.mp3\";","export default __webpack_public_path__ + \"static/media/game-completion.a7022fca.wav\";","export default __webpack_public_path__ + \"static/media/gamers-fail-game.1bab0c1d.mp3\";","export default __webpack_public_path__ + \"static/media/time-limited.3894918f.wav\";","export default __webpack_public_path__ + \"static/media/levelup.3dc0430f.mp3\";","export default __webpack_public_path__ + \"static/media/pop-down.cc0a5518.mp3\";","export default __webpack_public_path__ + \"static/media/pop-up-on.b776a1ef.mp3\";","export default __webpack_public_path__ + \"static/media/pop-up-off.83c6ba5b.mp3\";","export default __webpack_public_path__ + \"static/media/you-win.70d95733.mp3\";","import { FC, useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport usePlaySound, { Sound } from \"../hooks/usePlaySound\";\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\n\nconst SoundProvider: FC = ({ children }) => {\n  const { playSound: playOpenMenuSound, loadedSound: loadedOpenMenuSound } =\n    usePlaySound();\n  const {\n    playSound: playCompletedGameSound,\n    loadedSound: loadedCompletedGameSound,\n  } = usePlaySound(Sound.COMPLETE_GAME);\n  const { playSound: playFailedGameSound, loadedSound: loadedFailedGameSound } =\n    usePlaySound(Sound.FAIL_GAME);\n  const { playSound: playBiteSound, loadedSound: loadedBiteSound } =\n    usePlaySound(Sound.BITE);\n  const { playSound: playDisableSound, loadedSound: loadedDisableSound } =\n    usePlaySound(Sound.DISABLE);\n  const { playSound: playEnableSound, loadedSound: loadedEnableSound } =\n    usePlaySound(Sound.ENABLE);\n  const { playSound: playOnSound, loadedSound: loadedOnSound } = usePlaySound(\n    Sound.ON\n  );\n  const { playSound: playOffSound, loadedSound: loadedOffSound } = usePlaySound(\n    Sound.OFF\n  );\n  const { playSound: playFanfareSound, loadedSound: loadedFanfareSound } =\n    usePlaySound(Sound.FANFARE);\n  const { playSound: playGlugSound, loadedSound: loadedGlugSound } =\n    usePlaySound(Sound.GLUG);\n  const {\n    playSound: playNearlyEndTimeSound,\n    loadedSound: loadedNearlyEndTimeSound,\n  } = usePlaySound(Sound.NEARLY_END_TIME);\n  const { playSound: playRisingPopSound, loadedSound: loadedRisingPopSound } =\n    usePlaySound(Sound.RISING_POP);\n  const { playSound: playPopDownSound, loadedSound: loadedPopDownSound } =\n    usePlaySound(Sound.POP_DOWN);\n  const { playSound: playPopUpOnSound, loadedSound: loadedPopUpOnSound } =\n    usePlaySound(Sound.POP_UP_OFF);\n  const { playSound: playPopUpOffSound, loadedSound: loadedPopUpOffSound } =\n    usePlaySound(Sound.POP_UP_ON);\n  const { playSound: playLevelUpSound, loadedSound: loadedLevelUpSound } =\n    usePlaySound(Sound.LEVEL_UP);\n  const { playSound: playYouWinSound, loadedSound: loadedYouWinSound } =\n    usePlaySound(Sound.YOU_WIN);\n  const setSounds = useSetRecoilState(gameSoundState);\n\n  useEffect(() => {\n    if (\n      loadedDisableSound !== null &&\n      loadedEnableSound !== null &&\n      loadedFanfareSound !== null &&\n      loadedNearlyEndTimeSound !== null &&\n      loadedOpenMenuSound !== null &&\n      loadedOnSound !== null &&\n      loadedOffSound !== null &&\n      loadedGlugSound !== null &&\n      loadedRisingPopSound !== null &&\n      loadedCompletedGameSound !== null &&\n      loadedFailedGameSound !== null &&\n      loadedPopDownSound !== null &&\n      loadedPopUpOnSound !== null &&\n      loadedPopUpOffSound !== null &&\n      loadedLevelUpSound !== null &&\n      loadedYouWinSound !== null &&\n      loadedBiteSound !== null\n    ) {\n      setTimeout(() => {\n        setSounds({\n          playFanfareSound,\n          playGlugSound,\n          playBiteSound,\n          playCompletedGameSound,\n          playDisableSound,\n          playEnableSound,\n          playFailedGameSound,\n          playRisingPopSound,\n          playOpenMenuSound,\n          playOnSound,\n          playOffSound,\n          playNearlyEndTimeSound,\n          playPopUpOnSound,\n          playPopUpOffSound,\n          playLevelUpSound,\n          playPopDownSound,\n          playYouWinSound,\n          soundReady: true,\n        });\n      }, 1000);\n    }\n  }, [\n    loadedFanfareSound,\n    loadedGlugSound,\n    loadedBiteSound,\n    loadedCompletedGameSound,\n    loadedDisableSound,\n    loadedEnableSound,\n    loadedFailedGameSound,\n    loadedRisingPopSound,\n    loadedOpenMenuSound,\n    loadedOnSound,\n    loadedOffSound,\n    loadedNearlyEndTimeSound,\n    loadedPopUpOnSound,\n    loadedPopUpOffSound,\n    loadedLevelUpSound,\n    loadedPopDownSound,\n    loadedYouWinSound,\n  ]);\n\n  return <>{children}</>;\n};\n\nexport default SoundProvider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport SoundProvider from \"./components/SoundProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <SoundProvider>\n        <Router>\n          <App />\n        </Router>\n      </SoundProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}